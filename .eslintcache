[{"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js":"1","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js":"2","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js":"3","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js":"4","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js":"5","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js":"6","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js":"7","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js":"8","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildInWaiting.js":"9","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js":"10","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js":"11","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js":"12","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js":"13","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js":"14","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js":"15","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js":"16","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\transformPc.js":"17","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\validateLine.js":"18"},{"size":500,"mtime":1606347215642,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1606347215642,"results":"21","hashOfConfig":"20"},{"size":243,"mtime":1612063295992,"results":"22","hashOfConfig":"20"},{"size":124,"mtime":1612063279349,"results":"23","hashOfConfig":"20"},{"size":442,"mtime":1612065399157,"results":"24","hashOfConfig":"20"},{"size":2389,"mtime":1612439321951,"results":"25","hashOfConfig":"20"},{"size":920,"mtime":1612066663694,"results":"26","hashOfConfig":"20"},{"size":426,"mtime":1612433296266,"results":"27","hashOfConfig":"20"},{"size":256,"mtime":1612068679410,"results":"28","hashOfConfig":"20"},{"size":494,"mtime":1612433045029,"results":"29","hashOfConfig":"20"},{"size":206,"mtime":1612118177526,"results":"30","hashOfConfig":"20"},{"size":891,"mtime":1612121841635,"results":"31","hashOfConfig":"20"},{"size":196,"mtime":1612117209971,"results":"32","hashOfConfig":"20"},{"size":223,"mtime":1612118295758,"results":"33","hashOfConfig":"20"},{"size":2944,"mtime":1612438714311,"results":"34","hashOfConfig":"20"},{"size":3622,"mtime":1612435655557,"results":"35","hashOfConfig":"20"},{"size":333,"mtime":1612436741619,"results":"36","hashOfConfig":"20"},{"size":705,"mtime":1612439898949,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xnd0v6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js",[],["78","79"],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js",["80"],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildInWaiting.js",["81"],"\r\nconst longPc = [\r\n    [0, 3],\r\n    [0, 4],\r\n    [0, 5],\r\n    [0, 6]\r\n]\r\n\r\nconst singlePc = [\r\n    [0, 0]\r\n]\r\n\r\nconst pcs = [\r\n    singlePc\r\n]\r\n\r\nconst buildInWaiting = () => pcs[Math.floor((Math.random() * pcs.length))]\r\n\r\nexport {\r\n    buildInWaiting\r\n}","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js",["82"],"\r\nimport { useEffect } from 'react';\r\n// parent hook\r\nimport { useBoard } from './useBoard'\r\n\r\nimport { BOARD_ACTIONS } from './boardReducer.js'\r\n\r\nconst { PULL_ACTIVE, BUILD_IN_WAITING } = BOARD_ACTIONS\r\n\r\n\r\nexport const usePcs = (reducer, init) => {\r\n    // point at which initialize reducer && assets\r\n    const [boardState, dispatchBoard] = useBoard(reducer, init)\r\n\r\n    useEffect(() => {\r\n        // when active pc falls, kill it\r\n        // this useEffect will handle by pulling active\r\n        if (!boardState.activePc.length) { dispatchBoard({ type: PULL_ACTIVE }) }\r\n        // init case, but also reset case\r\n        if (!boardState.inWaitingPc.length) { dispatchBoard({ type: BUILD_IN_WAITING }) }\r\n    \r\n    }, [boardState])\r\n\r\n    return [\r\n        boardState, \r\n        dispatchBoard, \r\n        /*\r\n        deps: \r\n        just dev buttons for dispatch\r\n        */\r\n    ]\r\n}\r\n","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js",["83"],"\r\nimport produce from 'immer'\r\nconst BOARD_ACTIONS = {\r\n    UP: 'keyPress_up',\r\n    RIGHT: 'keyPress_right',\r\n    DOWN: 'keyPress_down',\r\n    LEFT: 'keyPress_left',\r\n}\r\n\r\nconst {\r\n    UP,\r\n    RIGHT,\r\n    DOWN,\r\n    LEFT,\r\n} = BOARD_ACTIONS\r\n\r\nexport const canHasMovement = (board, activePc, dir) => {\r\n    // receive (board, activePc)\r\n    // if !activePc.lenght return false\r\n    if (!activePc.length) { \r\n        console.log('keyPress: RIGHT. no pc present, preventing movement') \r\n        return { canHas: false, pos: [] } \r\n    }\r\n\r\n    // dir: [UP, RIGHT, DOWN, LEFT] - helper validates against ACTIONS\r\n\r\n    /* reduce to check individual parts, returns: \r\n        expect: moveDown1Obj : {\r\n            canHas: boolean,\r\n            pos: Array(1) [y, x]\r\n            }\r\n    */\r\n\r\n   if (dir === LEFT) {\r\n        return activePc.reduce( (prev, block, idx) => {\r\n            if (!prev.canHas) { return prev }\r\n\r\n            const blockY = block[0]\r\n            const blockX = block[1]\r\n\r\n            // wall collision check\r\n            if (blockX - 1 < 0) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            }\r\n            // pc collision check\r\n            else if (board[blockY][blockX-1] === 1) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            } else {\r\n                return produce(prev, draft => {\r\n                    draft.pos = [...draft.pos, [blockY, blockX-1]]\r\n                })\r\n            }\r\n\r\n            \r\n        }, { canHas: true, pos: [] })\r\n\r\n    } \r\n\r\n    if (dir === RIGHT) {\r\n        return activePc.reduce( (prev, block, idx) => {\r\n            if (!prev.canHas) { return prev }\r\n\r\n            const blockY = block[0]\r\n            const blockX = block[1]\r\n            // wall collision check\r\n            if (blockX + 1 >= board[0].length) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            }\r\n            // pc collision check\r\n            else if (board[blockY][blockX+1] === 1) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            } else {\r\n                return produce(prev, draft => {\r\n                    draft.pos = [...draft.pos, [blockY, blockX+1]]\r\n                })\r\n            }\r\n\r\n            \r\n        }, { canHas: true, pos: [] })\r\n\r\n    } \r\n    \r\n    if (dir === DOWN) {\r\n        return activePc.reduce( (prev, block, idx) => {\r\n            if (!prev.canHas) { return prev }\r\n\r\n            const blockY = block[0]\r\n            const blockX = block[1]\r\n\r\n            // floor collision check\r\n            if (blockY + 1 >= board.length) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n\r\n            // staticPc collision check\r\n            } else if (board[blockY+1][blockX] === 1) {\r\n\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n\r\n            // render pc next pos returned with next acc/prev\r\n            } else {\r\n                return produce(prev, draft => {\r\n                    draft.pos = [...draft.pos, [blockY+1, blockX]]\r\n                })\r\n            }\r\n\r\n        }, { canHas: true, pos: [] })\r\n\r\n    }\r\n\r\n}","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\transformPc.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\validateLine.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":51,"column":8,"nodeType":"90","endLine":51,"endColumn":26,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":7,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"96","line":22,"column":8,"nodeType":"90","endLine":22,"endColumn":20,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"98","line":11,"column":5,"nodeType":"94","messageId":"95","endLine":11,"endColumn":7},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'boardState.combo'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-unused-vars","'longPc' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatchBoard'. Either include it or remove the dependency array.",["102"],"'UP' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [boardState.board, boardState.combo]",{"range":"107","text":"108"},"Update the dependencies array to be: [boardState, dispatchBoard]",{"range":"109","text":"110"},[1402,1420],"[boardState.board, boardState.combo]",[724,736],"[boardState, dispatchBoard]"]