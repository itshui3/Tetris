[{"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js":"1","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js":"2","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js":"3","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js":"4","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js":"5","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js":"6","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js":"7","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js":"8","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildInWaiting.js":"9","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js":"10","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js":"11","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js":"12","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js":"13","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js":"14","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js":"15","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js":"16"},{"size":500,"mtime":1606347215642,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1606347215642,"results":"19","hashOfConfig":"18"},{"size":243,"mtime":1612063295992,"results":"20","hashOfConfig":"18"},{"size":124,"mtime":1612063279349,"results":"21","hashOfConfig":"18"},{"size":442,"mtime":1612065399157,"results":"22","hashOfConfig":"18"},{"size":2346,"mtime":1612119792075,"results":"23","hashOfConfig":"18"},{"size":920,"mtime":1612066663694,"results":"24","hashOfConfig":"18"},{"size":401,"mtime":1612066375390,"results":"25","hashOfConfig":"18"},{"size":256,"mtime":1612068679410,"results":"26","hashOfConfig":"18"},{"size":536,"mtime":1612092844671,"results":"27","hashOfConfig":"18"},{"size":206,"mtime":1612118177526,"results":"28","hashOfConfig":"18"},{"size":891,"mtime":1612121841635,"results":"29","hashOfConfig":"18"},{"size":196,"mtime":1612117209971,"results":"30","hashOfConfig":"18"},{"size":223,"mtime":1612118295758,"results":"31","hashOfConfig":"18"},{"size":2307,"mtime":1612123516493,"results":"32","hashOfConfig":"18"},{"size":2518,"mtime":1612123558143,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"xnd0v6",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js",[],["70","71"],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js",["72"],"\r\nimport './styles/_helpers.css'\r\nimport './styles/_tetrisBoard.css'\r\nimport React, { useEffect } from 'react'\r\n\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\n// cell style factories\r\n// (stateAssets): renderUI\r\nimport { rightBorder, bottomBorder } from './assets/borderFactory.js'\r\nimport { isStaticPc, isActivePc } from './assets/cellRender.js'\r\n\r\n// tetris state assets\r\nimport {\r\n    useTetris,\r\n    initBoard,\r\n    BOARD_ACTIONS,\r\n    boardReducer,\r\n} from './useTetrisHooks'\r\n\r\nconst { KILL_ACTIVE } = BOARD_ACTIONS\r\n\r\nconst controls = {\r\n    'e': BOARD_ACTIONS.UP,\r\n    'f': BOARD_ACTIONS.RIGHT,\r\n    'd': BOARD_ACTIONS.DOWN,\r\n    's': BOARD_ACTIONS.LEFT,\r\n}\r\n\r\nfunction Tetris() {\r\n\r\n    const [boardState, dispatchBoard] = useTetris(boardReducer, initBoard)\r\n    // [e, f, d, s] - dispatchKeyActions\r\n\r\n    // e - idk what htis supposed to do\r\n    // f - move pc one unit right\r\n    // s - move pc one unit down\r\n    // d - move pc one unit left\r\n    const receiveKeyPress = (key) => {\r\n        // listen for key actions\r\n        console.log('in receive keypress', key)\r\n        dispatchBoard({ type: controls[key] })\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     console.log('in compo boardState:', boardState)\r\n    //     console.log('in compo dispatch:', dispatchBoard)\r\n    // }, [])\r\n\r\nreturn (\r\n<>\r\n<div className='tetris_cont'>\r\n\r\n{\r\nboardState.board.map((row, r_idx) => (\r\n<div className='board_row' key={r_idx}>\r\n    {\r\n        row.map((cell, c_idx) => (\r\n\r\n        <div className='board_cell' key={c_idx}\r\n        style={{ \r\n            ...rightBorder(c_idx), \r\n            ...bottomBorder(r_idx),\r\n            ...isStaticPc(cell),\r\n            ...isActivePc(boardState.activePc, [r_idx, c_idx])\r\n            // perhaps these render protocols can be bundled: \r\n            // ie. [bordering(c_idx, r_idx) && isPc(isStaticPc, isActivePc)]\r\n        }}\r\n        >\r\n\r\n        </div>\r\n\r\n        ))\r\n    }\r\n</div>\r\n))\r\n}\r\n\r\n{/* key handling */}\r\n<KeyboardEventHandler\r\nhandleKeys={['e', 'f', 'd', 's']}\r\nonKeyEvent={(key, e) => receiveKeyPress(key)} \r\n/>\r\n\r\n{/* helper buttons */}\r\n<div className='helpers_cont'>\r\n    <button \r\n    className='helpers_btn'\r\n    onClick={() => dispatchBoard({type: KILL_ACTIVE})}\r\n    >\r\n    kill active pc\r\n    </button>\r\n</div>\r\n\r\n</div>\r\n</>\r\n)\r\n}\r\n\r\nexport default Tetris\r\n","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildInWaiting.js",["73"],"\r\nconst longPc = [\r\n    [0, 3],\r\n    [0, 4],\r\n    [0, 5],\r\n    [0, 6]\r\n]\r\n\r\nconst singlePc = [\r\n    [0, 0]\r\n]\r\n\r\nconst pcs = [\r\n    singlePc\r\n]\r\n\r\nconst buildInWaiting = () => pcs[Math.floor((Math.random() * pcs.length))]\r\n\r\nexport {\r\n    buildInWaiting\r\n}","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js",["74"],"\r\nimport { useEffect } from 'react';\r\n// parent hook\r\nimport { useBoard } from './useBoard'\r\n\r\nimport { BOARD_ACTIONS } from './boardReducer.js'\r\n\r\nconst { PULL_ACTIVE, BUILD_IN_WAITING } = BOARD_ACTIONS\r\n\r\n\r\nexport const usePcs = (reducer, init) => {\r\n    // point at which initialize reducer && assets\r\n    const [boardState, dispatchBoard] = useBoard(reducer, init)\r\n\r\n    useEffect(() => {\r\n        // when active pc falls, kill it\r\n        // this useEffect will handle by pulling active\r\n        if (!boardState.activePc.length) { dispatchBoard({ type: PULL_ACTIVE }) }\r\n        // init case, but also reset case\r\n        if (!boardState.inWaitingPc.length) { dispatchBoard({ type: BUILD_IN_WAITING }) }\r\n    \r\n    }, [boardState])\r\n\r\n    return [\r\n        boardState, \r\n        dispatchBoard, \r\n        /*\r\n        deps: \r\n        just dev buttons for dispatch\r\n        */\r\n    ]\r\n}\r\n","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js",["75","76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":4,"column":17,"nodeType":"85","messageId":"86","endLine":4,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":2,"column":7,"nodeType":"85","messageId":"86","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":22,"column":8,"nodeType":"90","endLine":22,"endColumn":20,"suggestions":"91"},{"ruleId":"83","severity":1,"message":"92","line":11,"column":5,"nodeType":"85","messageId":"86","endLine":11,"endColumn":7},{"ruleId":"83","severity":1,"message":"93","line":13,"column":5,"nodeType":"85","messageId":"86","endLine":13,"endColumn":9},{"ruleId":"94","severity":1,"message":"95","line":42,"column":34,"nodeType":"96","messageId":"97","endLine":42,"endColumn":35},{"ruleId":"94","severity":1,"message":"95","line":72,"column":34,"nodeType":"96","messageId":"97","endLine":72,"endColumn":35},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'longPc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatchBoard'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'UP' is assigned a value but never used.","'DOWN' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [boardState, dispatchBoard]",{"range":"103","text":"104"},[724,736],"[boardState, dispatchBoard]"]