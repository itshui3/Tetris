[{"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js":"1","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js":"2","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js":"3","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js":"4","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js":"5","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js":"6","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js":"7","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js":"8","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildInWaiting.js":"9","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js":"10","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js":"11","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js":"12","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js":"13","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js":"14","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js":"15","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js":"16","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\transformPc.js":"17"},{"size":500,"mtime":1606347215642,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1606347215642,"results":"20","hashOfConfig":"19"},{"size":243,"mtime":1612063295992,"results":"21","hashOfConfig":"19"},{"size":124,"mtime":1612063279349,"results":"22","hashOfConfig":"19"},{"size":442,"mtime":1612065399157,"results":"23","hashOfConfig":"19"},{"size":1916,"mtime":1612433626133,"results":"24","hashOfConfig":"19"},{"size":920,"mtime":1612066663694,"results":"25","hashOfConfig":"19"},{"size":426,"mtime":1612433296266,"results":"26","hashOfConfig":"19"},{"size":256,"mtime":1612068679410,"results":"27","hashOfConfig":"19"},{"size":494,"mtime":1612433045029,"results":"28","hashOfConfig":"19"},{"size":206,"mtime":1612118177526,"results":"29","hashOfConfig":"19"},{"size":891,"mtime":1612121841635,"results":"30","hashOfConfig":"19"},{"size":196,"mtime":1612117209971,"results":"31","hashOfConfig":"19"},{"size":223,"mtime":1612118295758,"results":"32","hashOfConfig":"19"},{"size":3115,"mtime":1612436450583,"results":"33","hashOfConfig":"19"},{"size":3622,"mtime":1612435655557,"results":"34","hashOfConfig":"19"},{"size":530,"mtime":1612436615037,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"xnd0v6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js",[],["75","76"],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js",["77"],"\r\nimport './styles/_helpers.css'\r\nimport './styles/_tetrisBoard.css'\r\nimport React, { useEffect } from 'react'\r\n\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\n// cell style factories\r\n// (stateAssets): renderUI\r\nimport { determineBorder } from './assets/borderFactory.js'\r\nimport { isAPc } from './assets/cellRender.js'\r\n\r\n// tetris state assets\r\nimport {\r\n    useTetris,\r\n    initBoard,\r\n    BOARD_ACTIONS,\r\n    boardReducer,\r\n} from './useTetrisHooks'\r\n\r\nconst { KILL_ACTIVE } = BOARD_ACTIONS\r\n\r\nconst controls = {\r\n    'e': BOARD_ACTIONS.UP,\r\n    'f': BOARD_ACTIONS.RIGHT,\r\n    'd': BOARD_ACTIONS.DOWN,\r\n    's': BOARD_ACTIONS.LEFT,\r\n}\r\n\r\nfunction Tetris() {\r\n\r\n    const [boardState, dispatchBoard] = useTetris(boardReducer, initBoard)\r\n    // [e, f, d, s] - dispatchKeyActions\r\n\r\n    // e - idk what htis supposed to do\r\n    // f - move pc one unit right\r\n    // s - move pc one unit down\r\n    // d - move pc one unit left\r\n    const receiveKeyPress = (key) => {\r\n        // listen for key actions\r\n        dispatchBoard({ type: controls[key] })\r\n    }\r\n\r\nreturn (\r\n<>\r\n<div className='tetris_cont'>\r\n\r\n{\r\nboardState.board.map((row, r_idx) => (\r\n<div className='board_row' key={r_idx}>\r\n    {\r\n        row.map((staticCell, c_idx) => (\r\n\r\n        <div className='board_cell' key={c_idx}\r\n        style={{ \r\n            ...determineBorder(r_idx, c_idx),\r\n            ...isAPc(staticCell, boardState.activePc, [r_idx, c_idx])\r\n        }}\r\n        >\r\n\r\n        </div>\r\n\r\n        ))\r\n    }\r\n</div>\r\n))\r\n}\r\n\r\n{/* key handling */}\r\n<KeyboardEventHandler\r\nhandleKeys={['e', 'f', 'd', 's']}\r\nonKeyEvent={(key, e) => receiveKeyPress(key)} \r\n/>\r\n\r\n{/* helper buttons */}\r\n<div className='helpers_cont'>\r\n    <button \r\n    className='helpers_btn'\r\n    onClick={() => dispatchBoard({type: KILL_ACTIVE})}\r\n    >\r\n    kill active pc\r\n    </button>\r\n</div>\r\n\r\n</div>\r\n</>\r\n)\r\n}\r\n\r\nexport default Tetris\r\n","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildInWaiting.js",["78"],"\r\nconst longPc = [\r\n    [0, 3],\r\n    [0, 4],\r\n    [0, 5],\r\n    [0, 6]\r\n]\r\n\r\nconst singlePc = [\r\n    [0, 0]\r\n]\r\n\r\nconst pcs = [\r\n    singlePc\r\n]\r\n\r\nconst buildInWaiting = () => pcs[Math.floor((Math.random() * pcs.length))]\r\n\r\nexport {\r\n    buildInWaiting\r\n}","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js",["79"],"\r\nimport { useEffect } from 'react';\r\n// parent hook\r\nimport { useBoard } from './useBoard'\r\n\r\nimport { BOARD_ACTIONS } from './boardReducer.js'\r\n\r\nconst { PULL_ACTIVE, BUILD_IN_WAITING } = BOARD_ACTIONS\r\n\r\n\r\nexport const usePcs = (reducer, init) => {\r\n    // point at which initialize reducer && assets\r\n    const [boardState, dispatchBoard] = useBoard(reducer, init)\r\n\r\n    useEffect(() => {\r\n        // when active pc falls, kill it\r\n        // this useEffect will handle by pulling active\r\n        if (!boardState.activePc.length) { dispatchBoard({ type: PULL_ACTIVE }) }\r\n        // init case, but also reset case\r\n        if (!boardState.inWaitingPc.length) { dispatchBoard({ type: BUILD_IN_WAITING }) }\r\n    \r\n    }, [boardState])\r\n\r\n    return [\r\n        boardState, \r\n        dispatchBoard, \r\n        /*\r\n        deps: \r\n        just dev buttons for dispatch\r\n        */\r\n    ]\r\n}\r\n","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js",["80"],"\r\nimport produce from 'immer'\r\nconst BOARD_ACTIONS = {\r\n    UP: 'keyPress_up',\r\n    RIGHT: 'keyPress_right',\r\n    DOWN: 'keyPress_down',\r\n    LEFT: 'keyPress_left',\r\n}\r\n\r\nconst {\r\n    UP,\r\n    RIGHT,\r\n    DOWN,\r\n    LEFT,\r\n} = BOARD_ACTIONS\r\n\r\nexport const canHasMovement = (board, activePc, dir) => {\r\n    // receive (board, activePc)\r\n    // if !activePc.lenght return false\r\n    if (!activePc.length) { \r\n        console.log('keyPress: RIGHT. no pc present, preventing movement') \r\n        return { canHas: false, pos: [] } \r\n    }\r\n\r\n    // dir: [UP, RIGHT, DOWN, LEFT] - helper validates against ACTIONS\r\n\r\n    /* reduce to check individual parts, returns: \r\n        expect: moveDown1Obj : {\r\n            canHas: boolean,\r\n            pos: Array(1) [y, x]\r\n            }\r\n    */\r\n\r\n   if (dir === LEFT) {\r\n        return activePc.reduce( (prev, block, idx) => {\r\n            if (!prev.canHas) { return prev }\r\n\r\n            const blockY = block[0]\r\n            const blockX = block[1]\r\n\r\n            // wall collision check\r\n            if (blockX - 1 < 0) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            }\r\n            // pc collision check\r\n            else if (board[blockY][blockX-1] === 1) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            } else {\r\n                return produce(prev, draft => {\r\n                    draft.pos = [...draft.pos, [blockY, blockX-1]]\r\n                })\r\n            }\r\n\r\n            \r\n        }, { canHas: true, pos: [] })\r\n\r\n    } \r\n\r\n    if (dir === RIGHT) {\r\n        return activePc.reduce( (prev, block, idx) => {\r\n            if (!prev.canHas) { return prev }\r\n\r\n            const blockY = block[0]\r\n            const blockX = block[1]\r\n            // wall collision check\r\n            if (blockX + 1 >= board[0].length) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            }\r\n            // pc collision check\r\n            else if (board[blockY][blockX+1] === 1) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n            } else {\r\n                return produce(prev, draft => {\r\n                    draft.pos = [...draft.pos, [blockY, blockX+1]]\r\n                })\r\n            }\r\n\r\n            \r\n        }, { canHas: true, pos: [] })\r\n\r\n    } \r\n    \r\n    if (dir === DOWN) {\r\n        return activePc.reduce( (prev, block, idx) => {\r\n            if (!prev.canHas) { return prev }\r\n\r\n            const blockY = block[0]\r\n            const blockX = block[1]\r\n\r\n            // floor collision check\r\n            if (blockY + 1 >= board.length) {\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n\r\n            // staticPc collision check\r\n            } else if (board[blockY+1][blockX] === 1) {\r\n\r\n                return produce(prev, draft => {\r\n                    draft.canHas = false\r\n                    draft.pos = []\r\n                })\r\n\r\n            // render pc next pos returned with next acc/prev\r\n            } else {\r\n                return produce(prev, draft => {\r\n                    draft.pos = [...draft.pos, [blockY+1, blockX]]\r\n                })\r\n            }\r\n\r\n        }, { canHas: true, pos: [] })\r\n\r\n    }\r\n\r\n}","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\transformPc.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":17,"nodeType":"87","messageId":"88","endLine":4,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":2,"column":7,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":22,"column":8,"nodeType":"92","endLine":22,"endColumn":20,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"94","line":11,"column":5,"nodeType":"87","messageId":"88","endLine":11,"endColumn":7},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'longPc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatchBoard'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'UP' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [boardState, dispatchBoard]",{"range":"100","text":"101"},[724,736],"[boardState, dispatchBoard]"]