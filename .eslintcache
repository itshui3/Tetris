[{"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js":"1","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js":"2","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js":"3","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js":"4","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js":"5","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js":"6","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js":"7","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js":"8","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js":"9","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js":"10","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js":"11","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js":"12","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js":"13","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js":"14","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js":"15","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\transformPc.js":"16","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\validateLine.js":"17","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\clearLines.js":"18","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildPc.js":"19"},{"size":500,"mtime":1606347215642,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606347215642,"results":"22","hashOfConfig":"21"},{"size":243,"mtime":1612063295992,"results":"23","hashOfConfig":"21"},{"size":124,"mtime":1612063279349,"results":"24","hashOfConfig":"21"},{"size":442,"mtime":1612065399157,"results":"25","hashOfConfig":"21"},{"size":2412,"mtime":1612932474372,"results":"26","hashOfConfig":"21"},{"size":920,"mtime":1612839505306,"results":"27","hashOfConfig":"21"},{"size":426,"mtime":1612433296266,"results":"28","hashOfConfig":"21"},{"size":868,"mtime":1612932904813,"results":"29","hashOfConfig":"21"},{"size":206,"mtime":1612118177526,"results":"30","hashOfConfig":"21"},{"size":929,"mtime":1612932615004,"results":"31","hashOfConfig":"21"},{"size":196,"mtime":1612117209971,"results":"32","hashOfConfig":"21"},{"size":223,"mtime":1612118295758,"results":"33","hashOfConfig":"21"},{"size":3772,"mtime":1612934181186,"results":"34","hashOfConfig":"21"},{"size":3601,"mtime":1612934268914,"results":"35","hashOfConfig":"21"},{"size":517,"mtime":1612934441512,"results":"36","hashOfConfig":"21"},{"size":732,"mtime":1612926712331,"results":"37","hashOfConfig":"21"},{"size":452,"mtime":1612840273735,"results":"38","hashOfConfig":"21"},{"size":1859,"mtime":1612926077423,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"xnd0v6",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\index.js",[],["81","82"],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\reportWebVitals.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\App.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Header\\Header.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\Tetris.js",["83"],"\r\nimport './styles/_helpers.css'\r\nimport './styles/_tetrisBoard.css'\r\nimport React, { useEffect } from 'react'\r\n\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\n\r\n// cell style factories\r\n// (stateAssets): renderUI\r\nimport { determineBorder } from './assets/borderFactory.js'\r\nimport { isAPc } from './assets/cellRender.js'\r\n\r\n// line handling\r\nimport { validateLine } from './assets/validateLine.js'\r\nimport { clearLines } from './assets/clearLines.js'\r\n\r\n// tetris state assets\r\nimport {\r\n    useTetris,\r\n    initBoard,\r\n    BOARD_ACTIONS,\r\n    boardReducer,\r\n} from './useTetrisHooks'\r\n\r\nconst { KILL_ACTIVE } = BOARD_ACTIONS\r\n\r\nconst controls = {\r\n    'e': BOARD_ACTIONS.UP,\r\n    'f': BOARD_ACTIONS.RIGHT,\r\n    'd': BOARD_ACTIONS.DOWN,\r\n    's': BOARD_ACTIONS.LEFT,\r\n}\r\n\r\nconst lineActions = {\r\n    // 'highlight': BOARD_ACTIONS.HIGHLIGHT, \r\n    'update': BOARD_ACTIONS.UPDATE,\r\n}\r\n\r\nfunction Tetris() {\r\n\r\n    const [boardState, dispatchBoard] = useTetris(boardReducer, initBoard)\r\n\r\n    useEffect(() => {\r\n        const lineObj = validateLine(boardState.board)\r\n        // lineObj: { lines: [...Rows], points }\r\n        \r\n        if (lineObj.lines.size) {\r\n            dispatchBoard({ \r\n                type: lineActions['update'], \r\n                payload: clearLines(boardState.board, lineObj.lines)\r\n            })\r\n            // clearLines: updatedBoard: [...[...], etc]\r\n        }\r\n\r\n    }, [boardState.board])\r\n\r\n\r\n    const receiveKeyPress = (key) => {\r\n        // listen for key actions\r\n        dispatchBoard({ type: controls[key] })\r\n    }\r\n\r\nreturn (\r\n<>\r\n<div className='tetris_cont'>\r\n\r\n{\r\nboardState.board.map((row, r_idx) => (\r\n<div className='board_row' key={r_idx}>\r\n    {\r\n        row.map((staticCell, c_idx) => (\r\n\r\n        <div className='board_cell' key={c_idx}\r\n        style={{ \r\n            ...determineBorder(r_idx, c_idx),\r\n            ...isAPc(staticCell, boardState.activePc, [r_idx, c_idx])\r\n        }}\r\n        >\r\n\r\n        </div>\r\n\r\n        ))\r\n    }\r\n</div>\r\n))\r\n}\r\n\r\n{/* key handling */}\r\n<KeyboardEventHandler\r\nhandleKeys={['e', 'f', 'd', 's']}\r\nonKeyEvent={(key, e) => receiveKeyPress(key)} \r\n/>\r\n\r\n{/* helper buttons */}\r\n<div className='helpers_cont'>\r\n    <button \r\n    className='helpers_btn'\r\n    onClick={() => dispatchBoard({type: KILL_ACTIVE})}\r\n    >\r\n    kill active pc\r\n    </button>\r\n</div>\r\n\r\n</div>\r\n</>\r\n)\r\n}\r\n\r\nexport default Tetris\r\n","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\emptyBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\borderFactory.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\cellRender.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useTetris.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\usePcs.js",["84","85"],"\r\nimport { useEffect } from 'react';\r\n// parent hook\r\nimport { useBoard } from './useBoard'\r\n\r\nimport { BOARD_ACTIONS } from './boardReducer.js'\r\n\r\nconst { PULL_ACTIVE, BUILD_IN_WAITING } = BOARD_ACTIONS\r\n\r\n\r\nexport const usePcs = (reducer, init) => {\r\n    // point at which initialize reducer && assets\r\n    const [boardState, dispatchBoard] = useBoard(reducer, init)\r\n\r\n    useEffect(() => {\r\n        // when active pc falls, kill it\r\n        // this useEffect will handle by pulling active\r\n        if (!Object.keys(boardState.activePc).length) { dispatchBoard({ type: PULL_ACTIVE }) }\r\n        // init case, but also reset case\r\n        // if (!Object.keys(boardState.inWaitingPc).length) { dispatchBoard({ type: BUILD_IN_WAITING }) }\r\n    \r\n    }, [boardState.activePc])\r\n\r\n    return [\r\n        boardState, \r\n        dispatchBoard, \r\n        /*\r\n        deps: \r\n        just dev buttons for dispatch\r\n        */\r\n    ]\r\n}\r\n","C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\useBoard.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\useTetrisHooks\\boardReducer.js",["86","87"],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\canHasMovement.js",["88"],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\transformPc.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\validateLine.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\clearLines.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\tetris\\src\\components\\Tetris\\assets\\buildPc.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":55,"column":8,"nodeType":"95","endLine":55,"endColumn":26,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":8,"column":22,"nodeType":"99","messageId":"100","endLine":8,"endColumn":38},{"ruleId":"93","severity":1,"message":"94","line":22,"column":8,"nodeType":"95","endLine":22,"endColumn":29,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"102","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":45,"column":5,"nodeType":"99","messageId":"100","endLine":45,"endColumn":21},{"ruleId":"97","severity":1,"message":"103","line":11,"column":5,"nodeType":"99","messageId":"100","endLine":11,"endColumn":7},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatchBoard'. Either include it or remove the dependency array.","ArrayExpression",["106"],"no-unused-vars","'BUILD_IN_WAITING' is assigned a value but never used.","Identifier","unusedVar",["107"],"'clearLines' is defined but never used.","'UP' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [boardState.board, dispatchBoard]",{"range":"112","text":"113"},"Update the dependencies array to be: [boardState.activePc, dispatchBoard]",{"range":"114","text":"115"},[1423,1441],"[boardState.board, dispatchBoard]",[753,774],"[boardState.activePc, dispatchBoard]"]